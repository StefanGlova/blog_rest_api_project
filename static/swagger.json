{
    "swagger": "2.0",
    "info": {
      "description": "Flask REST API for adding, updating, viewing, and deleting blogs",
      "version": "1.0.0",
      "title": "blog_rest_api_project"
    },
    "tags": [
      {
        "name": "Blog API",
        "description": "Test API for managing blogs"
      }
    ],
    "servers": [
      {
        "url": "/"
      }
    ],
    "paths": {
      "/add": {
        "post": {
          "tags": ["Blog API"],
          "summary": "Add a new blog",
          "operationId": "addBlog",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "blog",
              "description": "Blog object",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/AddBlog"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Blog added successfully"
            },
            "400": {
              "description": "User does not exist"
            }
          }
        },
        "get": {
          "tags": ["Blog API"],
          "summary": "Get Flask form for adding a new blog",
          "operationId": "getAddForm",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "userID",
              "in": "query",
              "description": "User ID",
              "required": true,
              "type": "integer",
              "format": "int64"
            },
            {
                "name": "title",
                "in": "query",
                "description": "blog title",
                "required": true,
                "type": "string"
              },
              {
                "name": "body",
                "in": "query",
                "description": "blog body text",
                "required": true,
                "type": "string"
              }
          ],
          "responses": {
            "200": {
              "description": "Form loaded successfully"
            }
          }
        }
      },
      "/delete": {
        "post": {
          "tags": ["Blog API"],
          "summary": "Delete a blog",
          "operationId": "deleteBlog",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "blog",
              "description": "Blog object",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/DeleteBlog"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Blog deleted successfully"
            },
            "400": {
              "description": "Blog does not exist"
            }
          }
        },
        "get": {
            "tags": ["Blog API"],
            "summary": "Get Flask form for deleting a blog by its id",
            "operationId": "getDeleteForm",
            "produces": ["application/json"],
            "parameters": [
                {
                  "name": "id",
                  "in": "query",
                  "description": "blog ID",
                  "required": true,
                  "type": "integer",
                  "format": "int64"
                }
              ],
            "responses": {
              "200": {
                "description": "Form loaded successfully"
              }
            }
          }
      },
      "/viewID": {
        "post": {
          "tags": ["Blog API"],
          "summary": "View a blog by ID",
          "operationId": "showBlogById",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "blog",
              "description": "Blog object",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/ShowBlogById"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Blog found"
            },
            "400": {
              "description": "Blog not found even externally, Invalid ID supplied"
            }
          }
        },
        "get": {
          "tags": ["Blog API"],
          "summary": "Get Flask form to view blog by blog id",
          "operationId": "getFormToGetBlogById",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "blog ID",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "Form loaded successfully"
            }
          }
        }
      },
      "/viewUser": {
        "post": {
          "tags": ["Blog API"],
          "summary": "View a blog by User ID",
          "operationId": "showBlogByUserId",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "blog",
              "description": "Blog object",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/ShowBlogByUserId"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Blog found"
            },
            "400": {
              "description": "Blog not found, Invalid User ID supplied"
            }
          }
        },
        "get": {
          "tags": ["Blog API"],
          "summary": "Get Flask form to view blog by userID",
          "operationId": "getFormToGetBlogByUserID",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "userID",
              "in": "query",
              "description": "User ID",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "200": {
              "description": "Form loaded successfully"
            }
          }
        }
      },
      "/updateTitle": {
        "post": {
          "tags": ["Blog API"],
          "summary": "Update blog title",
          "operationId": "updateTitle",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "blog",
              "description": "Blog object",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/UpdateTitle"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Title updated successfully"
            },
            "400": {
              "description": "Blog not found - title can't be changed"
            }
          }
        },
        "get": {
            "tags": ["Blog API"],
            "summary": "Get Flask form to update blog title by blog id",
            "operationId": "getFormToUpdateTitleById",
            "produces": ["application/json"],
            "parameters": [
                {
                  "name": "id",
                  "in": "query",
                  "description": "blog ID",
                  "required": true,
                  "type": "integer",
                  "format": "int64"
                },
                {
                    "name": "title",
                    "in": "query",
                    "description": "blog title",
                    "required": true,
                    "type": "string"
                  }
              ],
            "responses": {
                "200": {
                "description": "Form loaded successfully"
                }
            }
            }
      },
      "/updateBody": {
        "post": {
          "tags": ["Blog API"],
          "summary": "Update blog body",
          "operationId": "updateBody",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "blog",
              "description": "Blog object",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/UpdateBody"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Blog text updated successfully"
            },
            "400": {
              "description": "Blog not found - text can't be changed"
            }
          }
        },
        "get": {
            "tags": ["Blog API"],
            "summary": "Get Flask form to update blog text body by blog id",
            "operationId": "getFormToUpdateBodyById",
            "produces": ["application/json"],
            "parameters": [
                {
                  "name": "id",
                  "in": "query",
                  "description": "blog ID",
                  "required": true,
                  "type": "integer",
                  "format": "int64"
                },
                {
                "name": "body",
                "in": "query",
                "description": "blog body text",
                "required": true,
                "type": "string"
                }
              ],
            "responses": {
                "200": {
                "description": "Form loaded successfully"
                }
            }
            }
      }
    },
    "components": {
      "schemas": {
        "AddBlog": {
          "type": "object",
          "properties": {
            "userID": {
              "type": "integer"
            },
            "title": {
              "type": "string"
            },
            "body": {
              "type": "string"
            }
          }
        },
        "ShowBlogById": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            }
          }
        },
        "ShowBlogByUserId": {
          "type": "object",
          "properties": {
            "userID": {
              "type": "integer"
            }
          }
        },
        "DeleteBlog": {
          "type": "object",
          "properties": {
            "userID": {
              "type": "integer"
            }
          }
        },
        "UpdateTitle": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "title": {
              "type": "string"
            }
          }
        },
        "UpdateBody": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "body": {
              "type": "string"
            }
          }
        }
      }
    }
  }
  